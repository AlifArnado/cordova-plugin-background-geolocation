0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.1.6
3 info using node@v0.10.33
4 verbose node symlink /usr/local/bin/node
5 verbose publish [ '.' ]
6 silly cache add args [ '.', null ]
7 verbose cache add spec .
8 silly cache add parsed spec { raw: '.',
8 silly cache add   scope: null,
8 silly cache add   name: null,
8 silly cache add   rawSpec: '.',
8 silly cache add   spec: '/Users/idoivri/Sites/projects/cordova-plugin-background-geolocation',
8 silly cache add   type: 'directory' }
9 verbose tar pack [ '/Users/idoivri/.npm/cordova-plugin-background-geolocation-zencity/1.0.0/package.tgz',
9 verbose tar pack   '/Users/idoivri/Sites/projects/cordova-plugin-background-geolocation' ]
10 verbose tarball /Users/idoivri/.npm/cordova-plugin-background-geolocation-zencity/1.0.0/package.tgz
11 verbose folder /Users/idoivri/Sites/projects/cordova-plugin-background-geolocation
12 info prepublish cordova-plugin-background-geolocation-zencity@1.0.0
13 verbose addLocalTarball adding from inside cache /Users/idoivri/.npm/cordova-plugin-background-geolocation-zencity/1.0.0/package.tgz
14 silly cache afterAdd cordova-plugin-background-geolocation-zencity@1.0.0
15 verbose afterAdd /Users/idoivri/.npm/cordova-plugin-background-geolocation-zencity/1.0.0/package/package.json not in flight; writing
16 verbose afterAdd /Users/idoivri/.npm/cordova-plugin-background-geolocation-zencity/1.0.0/package/package.json written
17 silly publish { name: 'cordova-plugin-background-geolocation-zencity',
17 silly publish   version: '1.0.0',
17 silly publish   description: 'Premium Version ==============================',
17 silly publish   main: 'index.js',
17 silly publish   directories: { example: 'example' },
17 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'https://github.com/ZenCity/cordova-plugin-background-geolocation.git' },
17 silly publish   author: '',
17 silly publish   license: 'ISC',
17 silly publish   bugs: { url: 'https://github.com/ZenCity/cordova-plugin-background-geolocation/issues' },
17 silly publish   homepage: 'https://github.com/ZenCity/cordova-plugin-background-geolocation',
17 silly publish   keywords: [ 'cordova', 'ecosystem:cordova' ],
17 silly publish   readme: 'Premium Version\n==============================\n\nA new [Premium Version](http://christocracy.github.io/cordova-background-geolocation/) is available.\n- Implements the latest Android Fused GeoLocation and ActivityRecognition APIs for **much-improved** battery performance.\n- Auto-start Android & iOS on device-boot.\n- Android now executes your ```callback``` just like **iOS**!\n- Both iOS & Android can optionally **HTTP** POST locations to your server in the native code.  Optional **batch-mode**.\n- Native **SQLite persistence** layer (for when no network is available).  Plugin provides a javascript API to fetch and/or sync the locations to your server.\n- **Geofencing**.  Both iOS and Android allow you to add arbitrary circular geofences which execute your javascript-callback when a crossing-event occurs.\n\n![Android Battery Performance](/images/Screenshot-android-battery-framed.png "Android battery performance")\n![SampleApp](/images/Screenshot-android-map1-framed.png "SampleApp")\n\nBackgroundGeoLocation\n==============================\n\nCross-platform background geolocation for Cordova / PhoneGap with battery-saving "circular region monitoring" and "stop detection".\n\n![distanceFilter at highway speed](/images/distance-filter-highway.png "distanceFilter at highway speed")\n\nFollows the [Cordova Plugin spec](https://github.com/apache/cordova-plugman/blob/master/plugin_spec.md), so that it works with [Plugman](https://github.com/apache/cordova-plugman).\n\nThis plugin leverages Cordova/PhoneGap\'s [require/define functionality used for plugins](http://simonmacdonald.blogspot.ca/2012/08/so-you-wanna-write-phonegap-200-android.html).\n\n## Using the plugin ##\nThe plugin creates the object `window.plugins.backgroundGeoLocation` with the methods\n\n  `configure(success, fail, option)`,\n\n  `start(success, fail)`\n\n  `stop(success, fail)`.\n\n## Installing the plugin ##\n\n```\n\n   cordova plugin add https://github.com/christocracy/cordova-plugin-background-geolocation.git\n```\n\n**ACHTUNG!** If you\'re not using **Cordova 5.x**, you must use the tagged branch ```#cordova-4.x``` to install the plugin, like this (Because Cordova has [migrated to npm](https://cordova.apache.org/announcements/2015/04/21/plugins-release-and-move-to-npm.html))\n\n```\n  cordova plugin add https://github.com/christocracy/cordova-plugin-background-geolocation.git#cordova-4.x\n```\n\nA full example could be:\n```\n    //\n    //\n    // after deviceready\n    //\n    //\n\n    // Your app must execute AT LEAST ONE call for the current position via standard Cordova geolocation,\n    //  in order to prompt the user for Location permission.\n    window.navigator.geolocation.getCurrentPosition(function(location) {\n        console.log(\'Location from Phonegap\');\n    });\n\n    var bgGeo = window.plugins.backgroundGeoLocation;\n\n    /**\n    * This would be your own callback for Ajax-requests after POSTing background geolocation to your server.\n    */\n    var yourAjaxCallback = function(response) {\n        ////\n        // IMPORTANT:  You must execute the #finish method here to inform the native plugin that you\'re finished,\n        //  and the background-task may be completed.  You must do this regardless if your HTTP request is successful or not.\n        // IF YOU DON\'T, ios will CRASH YOUR APP for spending too much time in the background.\n        //\n        //\n        bgGeo.finish();\n    };\n\n    /**\n    * This callback will be executed every time a geolocation is recorded in the background.\n    */\n    var callbackFn = function(location) {\n        console.log(\'[js] BackgroundGeoLocation callback:  \' + location.latitude + \',\' + location.longitude);\n        // Do your HTTP request here to POST location to your server.\n        //\n        //\n        yourAjaxCallback.call(this);\n    };\n\n    var failureFn = function(error) {\n        console.log(\'BackgroundGeoLocation error\');\n    }\n\n    // BackgroundGeoLocation is highly configurable.\n    bgGeo.configure(callbackFn, failureFn, {\n        url: \'http://only.for.android.com/update_location.json\', // <-- Android ONLY:  your server url to send locations to\n        params: {\n            auth_token: \'user_secret_auth_token\',    //  <-- Android ONLY:  HTTP POST params sent to your server when persisting locations.\n            foo: \'bar\'                              //  <-- Android ONLY:  HTTP POST params sent to your server when persisting locations.\n        },\n        headers: {                                   // <-- Android ONLY:  Optional HTTP headers sent to your configured #url when persisting locations\n            "X-Foo": "BAR"\n        },\n        desiredAccuracy: 10,\n        stationaryRadius: 20,\n        distanceFilter: 30,\n        notificationTitle: \'Background tracking\', // <-- android only, customize the title of the notification\n        notificationText: \'ENABLED\', // <-- android only, customize the text of the notification\n        activityType: \'AutomotiveNavigation\',\n        debug: true, // <-- enable this hear sounds for background-geolocation life-cycle.\n        stopOnTerminate: false // <-- enable this to clear background location settings when the app terminates\n    });\n\n    // Turn ON the background-geolocation system.  The user will be tracked whenever they suspend the app.\n    bgGeo.start();\n\n    // If you wish to turn OFF background-tracking, call the #stop method.\n    // bgGeo.stop()\n\n\n```\n\nNOTE: The plugin includes `org.apache.cordova.geolocation` as a dependency.  You must enable Cordova\'s GeoLocation in the foreground and have the user accept Location services by executing `#watchPosition` or `#getCurrentPosition`.\n\n## Example Application\n\nThis plugin hosts a SampleApp in ```example/SampleApp``` folder.  This SampleApp contains no plugins so you must first start by adding this plugin.  You must copy the the `SampleApp` **out of** the repo folder to use it.\n\n![SampleApp](/images/android-sample-app.png "SampleApp")\n\nFirst, copy the `SampleApp` out of the repo and into any folder you wish (eg: `tmp`).\n```\n$ cp -R cordova-plugin-background-geolocation/example/SampleApp ./tmp\n$ cd tmp/SampleApp\n$ cordova plugin add https://github.com/christocracy/cordova-plugin-background-geolocation.git\n$ cordova platform add ios\n$ cordova build ios\n\n```\n\nIf you\'re using XCode, boot the SampleApp in the iOS Simulator and enable ```Debug->Location->City Drive```.\n\n\n## Behaviour\n\nThe plugin has features allowing you to control the behaviour of background-tracking, striking a balance between accuracy and battery-usage.  In stationary-mode, the plugin attempts to descrease its power usage and accuracy by setting up a circular stationary-region of configurable #stationaryRadius.  iOS has a nice system  [Significant Changes API](https://developer.apple.com/library/ios/documentation/CoreLocation/Reference/CLLocationManager_Class/CLLocationManager/CLLocationManager.html#//apple_ref/occ/instm/CLLocationManager/startMonitoringSignificantLocationChanges), which allows the os to suspend your app until a cell-tower change is detected (typically 2-3 city-block change) Android uses [LocationManager#addProximityAlert](http://developer.android.com/reference/android/location/LocationManager.html). Windows Phone does not have such a API.\n\nWhen the plugin detects your user has moved beyond his stationary-region, it engages the native platform\'s geolocation system for aggressive monitoring according to the configured `#desiredAccuracy`, `#distanceFilter` and `#locationTimeout`.  The plugin attempts to intelligently scale `#distanceFilter` based upon the current reported speed.  Each time `#distanceFilter` is determined to have changed by 5m/s, it recalculates it by squaring the speed rounded-to-nearest-five and adding #distanceFilter (I arbitrarily came up with that formula.  Better ideas?).\n\n  `(round(speed, 5))^2 + distanceFilter`\n\n## iOS\n\nOn iOS the plugin will execute your configured ```callbackFn```. You may manually POST the received ```GeoLocation``` to your server using standard XHR. iOS ignores the @config params ```url```, ```params``` and ```headers```. The plugin uses iOS Significant Changes API, and starts triggering ```callbackFn``` only when a cell-tower switch is detected (i.e. the device exits stationary radius). The function ```changePace(isMoving, success, failure)``` is provided to force the plugin to enter "moving" or "stationary" state.\n\n\n### Android\n\nAndroid **WILL NOT** execute your configured ```callbackFn```.  The plugin manages sync-ing GeoLocations to your server automatically, using the configured ```url```, ```params``` and ```headers```.  Since the Android plugin must run as an autonomous Background Service, disconnected from your the main Android Activity (your foreground application), the background-geolocation plugin will continue to run, even if the foreground Activity is killed due to memory constraints.  This is why the Android plugin cannot execute the Javascript ```callbackFn```, since your app is not guaranteed to keep running -- syncing locations to the server must be handled by the plugin.\n\nThe Android plugin sends an HTTP POST to your configured ```url``` with ```Content-Type: application/json```.  The JSON location-data is encoded into the Request Body.  PHP people have [trouble with this](https://github.com/christocracy/cordova-plugin-background-geolocation/issues/50).  In PHP, find the raw JSON body with:\n\n```$data = file_get_contents(\'php://input\');```.\n\n```\n{\n    "location": {\n        "latitude": "<data>",\n        "longitude": "<data>",\n        "speed": "<data>",\n        "bearing" "<data>",\n        "altitude": "<data>",\n        "recorded_at": "<data>"\n    }\n}\n```\n\n### WP8\n\nWP8 uses ```callbackFn``` the way iOS do. On WP8, however, the plugin does not support the Stationary location and does not implement ```getStationaryLocation()``` and ```onPaceChange()```.\nKeep in mind that it is **not** possible to use ```start()``` at the ```pause``` event of Cordova/PhoneGap. WP8 suspend your app immediately and ```start()``` will not be executed. So make sure you fire ```start()``` before the app is closed/minimized.\n\n### Config\n\nUse the following config-parameters with the #configure method:\n\n#####`@param {Integer} desiredAccuracy [0, 10, 100, 1000] in meters`\n\nThe lower the number, the more power devoted to GeoLocation resulting in higher accuracy readings.  1000 results in lowest power drain and least accurate readings.  @see [Apple docs](https://developer.apple.com/library/ios/documentation/CoreLocation/Reference/CLLocationManager_Class/CLLocationManager/CLLocationManager.html#//apple_ref/occ/instp/CLLocationManager/desiredAccuracy)\n\n#####`@param {Integer} stationaryRadius (meters)`\n\nWhen stopped, the minimum distance the device must move beyond the stationary location for aggressive background-tracking to engage.  Note, since the plugin uses iOS significant-changes API, the plugin cannot detect the exact moment the device moves out of the stationary-radius.  In normal conditions, it can take as much as 3 city-blocks to 1/2 km before staionary-region exit is detected.\n\n#####`@param {Boolean} debug`\n\nWhen enabled, the plugin will emit sounds for life-cycle events of background-geolocation!  **NOTE iOS**:  In addition, you must manually enable the *Audio and Airplay* background mode in *Background Capabilities* to hear these debugging sounds.\n\n- Exit stationary region:  *[ios]* Calendar event notification sound *[android]* dialtone beep-beep-beep\n- GeoLocation recorded:  *[ios]* SMS sent sound, *[android]* tt short beep, *[WP8]* High beep, 1 sec.\n- Aggressive geolocation engaged:  *[ios]* SIRI listening sound, *[android]* none\n- Passive geolocation engaged:  *[ios]* SIRI stop listening sound, *[android]* none\n- Acquiring stationary location sound: *[ios]* "tick,tick,tick" sound, *[android]* none\n- Stationary location acquired sound:  *[ios]* "bloom" sound, *[android]* long tt beep.\n\n![Enable Background Audio](/images/enable-background-audio.png "Enable Background Audio")\n\n#####`@param {Integer} distanceFilter`\n\nThe minimum distance (measured in meters) a device must move horizontally before an update event is generated.  @see [Apple docs](https://developer.apple.com/library/ios/documentation/CoreLocation/Reference/CLLocationManager_Class/CLLocationManager/CLLocationManager.html#//apple_ref/occ/instp/CLLocationManager/distanceFilter).  However, #distanceFilter is elastically auto-calculated by the plugin:  When speed increases, #distanceFilter increases;  when speed decreases, so does distanceFilter.\n\ndistanceFilter is calculated as the square of speed-rounded-to-nearest-5 and adding configured #distanceFilter.\n\n  `(round(speed, 5))^2 + distanceFilter`\n\nFor example, at biking speed of 7.7 m/s with a configured distanceFilter of 30m:\n\n  `=> round(7.7, 5)^2 + 30`\n  `=> (10)^2 + 30`\n  `=> 100 + 30`\n  `=> 130`\n\nA gps location will be recorded each time the device moves 130m.\n\nAt highway speed of 30 m/s with distanceFilter: 30,\n\n  `=> round(30, 5)^2 + 30`\n  `=> (30)^2 + 30`\n  `=> 900 + 30`\n  `=> 930`\n\nA gps location will be recorded every 930m\n\nNote the following real example of background-geolocation on highway 101 towards San Francisco as the driver slows down as he runs into slower traffic (geolocations become compressed as distanceFilter decreases)\n\n![distanceFilter at highway speed](/images/distance-filter-highway.png "distanceFilter at highway speed")\n\nCompare now background-geolocation in the scope of a city.  In this image, the left-hand track is from a cab-ride, while the right-hand track is walking speed.\n\n![distanceFilter at city scale](/images/distance-filter-city.png "distanceFilter at city scale")\n\n#####`@param {Boolean} stopOnTerminate`\nEnable this in order to force a stop() when the application terminated (e.g. on iOS, double-tap home button, swipe away the app)\n\n\n### Android Config\n\n#####`@param {String} url`\n\nThe url which the Android plugin will persist background geolocation to\n\n#####`@param {Object} params`\n\nOptional HTTP params POSTed to your server when persisting locations (eg:  auth_token)\n\n#####`@param {Object} headers`\n\nOptional HTTP headers POSTed to your server when persisting locations\n\n#####`@param {String} notificationText/Title`\n\nOn Android devices it is required to have a notification in the drawer because it\'s a "foreground service".  This gives it high priority, decreasing probability of OS killing it.  To customize the title and text of the notification, set these options.\n\n#####`@param {Integer} locationTimeout\n\nThe minimum time interval between location updates, in seconds.  See [Android docs](http://developer.android.com/reference/android/location/LocationManager.html#requestLocationUpdates(long,%20float,%20android.location.Criteria,%20android.app.PendingIntent)) for more information.\n\n### iOS Config\n\n#####`@param {String} activityType [AutomotiveNavigation, OtherNavigation, Fitness, Other]`\n\nPresumably, this affects ios GPS algorithm.  See [Apple docs](https://developer.apple.com/library/ios/documentation/CoreLocation/Reference/CLLocationManager_Class/CLLocationManager/CLLocationManager.html#//apple_ref/occ/instp/CLLocationManager/activityType) for more information\n\n### WP8 Config\n\n#####`{String} desiredAccuracy`\n\nIn Windows Phone, the underlying GeoLocator you can choose to use \'DesiredAccuracy\' or \'DesiredAccuracyInMeters\'. Since this plugins default configuration accepts meters, the default desiredAccuracy is mapped to the Windows Phone DesiredAccuracyInMeters leaving the DesiredAccuracy enum empty. For more info see the [MS docs](http://msdn.microsoft.com/en-us/library/windows/apps/windows.devices.geolocation.geolocator.desiredaccuracyinmeters) for more information.\n\n## Licence ##\n\n[Apache License](https://github.com/christocracy/cordova-plugin-background-geolocation/blob/master/LICENSE)\n\nCopyright (c) 2013 Christopher Scott, Transistor Software\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: 'ba6e4bbd44066dd7fd0e31776cc5cd6f6842b204',
17 silly publish   _id: 'cordova-plugin-background-geolocation-zencity@1.0.0',
17 silly publish   _shasum: '19100b15fca4a7663eb30517f07e961f7b83934d',
17 silly publish   _from: '.' }
18 verbose mapToRegistry name cordova-plugin-background-geolocation-zencity
19 verbose mapToRegistry uri https://registry.npmjs.org/cordova-plugin-background-geolocation-zencity
20 verbose publish registryBase https://registry.npmjs.org/
21 verbose request on initialization, where is /cordova-plugin-background-geolocation-zencity
22 verbose request after pass 1, where is /cordova-plugin-background-geolocation-zencity
23 verbose request url raw /cordova-plugin-background-geolocation-zencity
24 verbose request resolving registry [ 'https://registry.npmjs.org/',
24 verbose request   './cordova-plugin-background-geolocation-zencity' ]
25 verbose request after pass 2, where is https://registry.npmjs.org/cordova-plugin-background-geolocation-zencity
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 16:11:03
28 verbose request using bearer token for auth
29 verbose request id 31e9bb2a264deee3
30 http request PUT https://registry.npmjs.org/cordova-plugin-background-geolocation-zencity
31 http 403 https://registry.npmjs.org/cordova-plugin-background-geolocation-zencity
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=60',
32 verbose headers   'content-length': '95',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Fri, 10 Jul 2015 13:11:20 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-fra1239-FRA',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1436533864.360547,VS0,VE15957' }
33 error publish Failed PUT 403
34 verbose stack Error: "You cannot publish over the previously published version 1.0.0." : cordova-plugin-background-geolocation-zencity
34 verbose stack     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:260:14)
34 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:197:65)
34 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:364:22)
34 verbose stack     at Request.emit (events.js:98:17)
34 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1318:14)
34 verbose stack     at Request.emit (events.js:117:20)
34 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1266:12)
34 verbose stack     at IncomingMessage.emit (events.js:117:20)
34 verbose stack     at _stream_readable.js:943:16
34 verbose stack     at process._tickCallback (node.js:419:13)
35 verbose statusCode 403
36 verbose pkgid cordova-plugin-background-geolocation-zencity
37 verbose cwd /Users/idoivri/Sites/projects/cordova-plugin-background-geolocation
38 error Darwin 14.4.0
39 error argv "node" "/usr/local/bin/npm" "publish"
40 error node v0.10.33
41 error npm  v2.1.6
42 error code E403
43 error "You cannot publish over the previously published version 1.0.0." : cordova-plugin-background-geolocation-zencity
44 error If you need help, you may report this error at:
44 error     <http://github.com/npm/npm/issues>
45 verbose exit [ 1, true ]
